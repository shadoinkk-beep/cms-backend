"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/edit/[id]/page",{

/***/ "(app-pages-browser)/./components/utils/funcs.ts":
/*!***********************************!*\
  !*** ./components/utils/funcs.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatDateFromTimestamp: function() { return /* binding */ formatDateFromTimestamp; },\n/* harmony export */   getCurrentFormattedDate: function() { return /* binding */ getCurrentFormattedDate; }\n/* harmony export */ });\nfunction getReadMinutes(html) {\n    const text = html.replace(/<[^>]+>/g, \"\"); // remove HTML tags\n    const words = text.trim().split(/\\s+/).length;\n    const minutes = Math.ceil(words / 200); // avg 200 wpm\n    return minutes;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (getReadMinutes);\n/** Convert Firestore Timestamp -> \"DD-MM-YYYY\" */ function formatDateFromTimestamp(ts) {\n    const date = ts.toDate();\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // months are 0-11\n    const year = date.getFullYear();\n    return \"\".concat(day, \"-\").concat(month, \"-\").concat(year);\n}\nconst getCurrentFormattedDate = ()=>{\n    const today = new Date();\n    const day = String(today.getDate()).padStart(2, \"0\");\n    const month = String(today.getMonth() + 1).padStart(2, \"0\"); // Months are zero-based\n    const year = today.getFullYear();\n    return \"\".concat(day, \"-\").concat(month, \"-\").concat(year);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdXRpbHMvZnVuY3MudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxTQUFTQSxlQUFlQyxJQUFZO0lBQ2xDLE1BQU1DLE9BQU9ELEtBQUtFLE9BQU8sQ0FBQyxZQUFZLEtBQUssbUJBQW1CO0lBQzlELE1BQU1DLFFBQVFGLEtBQUtHLElBQUksR0FBR0MsS0FBSyxDQUFDLE9BQU9DLE1BQU07SUFDN0MsTUFBTUMsVUFBVUMsS0FBS0MsSUFBSSxDQUFDTixRQUFRLE1BQU0sY0FBYztJQUN0RCxPQUFPSTtBQUNUO0FBQ0EsK0RBQWVSLGNBQWNBLEVBQUM7QUFLOUIsZ0RBQWdELEdBQ3pDLFNBQVNXLHdCQUF3QkMsRUFBYTtJQUVuRCxNQUFNQyxPQUFPRCxHQUFHRSxNQUFNO0lBQ3RCLE1BQU1DLE1BQU1DLE9BQU9ILEtBQUtJLE9BQU8sSUFBSUMsUUFBUSxDQUFDLEdBQUc7SUFDL0MsTUFBTUMsUUFBUUgsT0FBT0gsS0FBS08sUUFBUSxLQUFLLEdBQUdGLFFBQVEsQ0FBQyxHQUFHLE1BQU0sa0JBQWtCO0lBQzlFLE1BQU1HLE9BQU9SLEtBQUtTLFdBQVc7SUFDN0IsT0FBTyxHQUFVSCxPQUFQSixLQUFJLEtBQVlNLE9BQVRGLE9BQU0sS0FBUSxPQUFMRTtBQUM1QjtBQUVPLE1BQU1FLDBCQUEwQjtJQUNyQyxNQUFNQyxRQUFRLElBQUlDO0lBQ2xCLE1BQU1WLE1BQU1DLE9BQU9RLE1BQU1QLE9BQU8sSUFBSUMsUUFBUSxDQUFDLEdBQUc7SUFDaEQsTUFBTUMsUUFBUUgsT0FBT1EsTUFBTUosUUFBUSxLQUFLLEdBQUdGLFFBQVEsQ0FBQyxHQUFHLE1BQU0sd0JBQXdCO0lBQ3JGLE1BQU1HLE9BQU9HLE1BQU1GLFdBQVc7SUFDOUIsT0FBTyxHQUFVSCxPQUFQSixLQUFJLEtBQVlNLE9BQVRGLE9BQU0sS0FBUSxPQUFMRTtBQUM1QixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvdXRpbHMvZnVuY3MudHM/MDRiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBnZXRSZWFkTWludXRlcyhodG1sOiBzdHJpbmcpIHtcclxuICBjb25zdCB0ZXh0ID0gaHRtbC5yZXBsYWNlKC88W14+XSs+L2csIFwiXCIpOyAvLyByZW1vdmUgSFRNTCB0YWdzXHJcbiAgY29uc3Qgd29yZHMgPSB0ZXh0LnRyaW0oKS5zcGxpdCgvXFxzKy8pLmxlbmd0aDtcclxuICBjb25zdCBtaW51dGVzID0gTWF0aC5jZWlsKHdvcmRzIC8gMjAwKTsgLy8gYXZnIDIwMCB3cG1cclxuICByZXR1cm4gbWludXRlcztcclxufVxyXG5leHBvcnQgZGVmYXVsdCBnZXRSZWFkTWludXRlcztcclxuXHJcblxyXG5pbXBvcnQgeyBUaW1lc3RhbXAgfSBmcm9tIFwiZmlyZWJhc2UvZmlyZXN0b3JlXCI7XHJcblxyXG4vKiogQ29udmVydCBGaXJlc3RvcmUgVGltZXN0YW1wIC0+IFwiREQtTU0tWVlZWVwiICovXHJcbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXREYXRlRnJvbVRpbWVzdGFtcCh0czogVGltZXN0YW1wKTogc3RyaW5nIHtcclxuXHJcbiAgY29uc3QgZGF0ZSA9IHRzLnRvRGF0ZSgpO1xyXG4gIGNvbnN0IGRheSA9IFN0cmluZyhkYXRlLmdldERhdGUoKSkucGFkU3RhcnQoMiwgXCIwXCIpO1xyXG4gIGNvbnN0IG1vbnRoID0gU3RyaW5nKGRhdGUuZ2V0TW9udGgoKSArIDEpLnBhZFN0YXJ0KDIsIFwiMFwiKTsgLy8gbW9udGhzIGFyZSAwLTExXHJcbiAgY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcclxuICByZXR1cm4gYCR7ZGF5fS0ke21vbnRofS0ke3llYXJ9YDtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldEN1cnJlbnRGb3JtYXR0ZWREYXRlID0gKCkgPT4ge1xyXG4gIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcclxuICBjb25zdCBkYXkgPSBTdHJpbmcodG9kYXkuZ2V0RGF0ZSgpKS5wYWRTdGFydCgyLCAnMCcpO1xyXG4gIGNvbnN0IG1vbnRoID0gU3RyaW5nKHRvZGF5LmdldE1vbnRoKCkgKyAxKS5wYWRTdGFydCgyLCAnMCcpOyAvLyBNb250aHMgYXJlIHplcm8tYmFzZWRcclxuICBjb25zdCB5ZWFyID0gdG9kYXkuZ2V0RnVsbFllYXIoKTtcclxuICByZXR1cm4gYCR7ZGF5fS0ke21vbnRofS0ke3llYXJ9YDtcclxufTtcclxuIl0sIm5hbWVzIjpbImdldFJlYWRNaW51dGVzIiwiaHRtbCIsInRleHQiLCJyZXBsYWNlIiwid29yZHMiLCJ0cmltIiwic3BsaXQiLCJsZW5ndGgiLCJtaW51dGVzIiwiTWF0aCIsImNlaWwiLCJmb3JtYXREYXRlRnJvbVRpbWVzdGFtcCIsInRzIiwiZGF0ZSIsInRvRGF0ZSIsImRheSIsIlN0cmluZyIsImdldERhdGUiLCJwYWRTdGFydCIsIm1vbnRoIiwiZ2V0TW9udGgiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJnZXRDdXJyZW50Rm9ybWF0dGVkRGF0ZSIsInRvZGF5IiwiRGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/utils/funcs.ts\n"));

/***/ })

});