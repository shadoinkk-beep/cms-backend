"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/edit/[id]/page",{

/***/ "(app-pages-browser)/./lib/updatePost.ts":
/*!***************************!*\
  !*** ./lib/updatePost.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updatePost: function() { return /* binding */ updatePost; }\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _firebaseconfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firebaseconfig */ \"(app-pages-browser)/./lib/firebaseconfig.ts\");\n/* harmony import */ var _schema_postSchema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../schema/postSchema */ \"(app-pages-browser)/./schema/postSchema.ts\");\n/* harmony import */ var _uploadImage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./uploadImage */ \"(app-pages-browser)/./lib/uploadImage.ts\");\n/* harmony import */ var _uploadEmbeddedImages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uploadEmbeddedImages */ \"(app-pages-browser)/./lib/uploadEmbeddedImages.ts\");\n\n\n\n\n\n/**\r\n * Update an existing post in Firestore.\r\n * - Uploads new cover image or embedded images (if provided).\r\n * - Validates data with Zod.\r\n * - Adds `updatedAt` timestamp.\r\n */ async function updatePost(postId, postData) {\n    try {\n        if (!postId) throw new Error(\"postId is required\");\n        const dataToUpdate = {\n            ...postData\n        };\n        // Upload cover image if it's a File\n        if (dataToUpdate.coverImage instanceof File) {\n            dataToUpdate.coverImage = await (0,_uploadImage__WEBPACK_IMPORTED_MODULE_3__.uploadImage)(dataToUpdate.coverImage);\n        }\n        // Upload embedded images if content exists\n        if (dataToUpdate.content) {\n            dataToUpdate.content = await (0,_uploadEmbeddedImages__WEBPACK_IMPORTED_MODULE_4__.uploadEmbeddedImages)(dataToUpdate.content);\n        }\n        // console.log(dataToUpdate)\n        delete dataToUpdate.createdAt;\n        // Validate with Zod (partial)\n        const validation = _schema_postSchema__WEBPACK_IMPORTED_MODULE_2__.PostSchema.partial().safeParse(dataToUpdate);\n        // console.log(validation)\n        if (!validation.success) {\n            throw new Error(validation.error.issues.map((i)=>i.message).join(\", \"));\n        }\n        // Update Firestore\n        const ref = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebaseconfig__WEBPACK_IMPORTED_MODULE_1__.db, \"posts\", postId);\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(ref, {\n            ...validation.data,\n            updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n        });\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error(\"Error updating post:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi91cGRhdGVQb3N0LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxRTtBQUMvQjtBQUNzQjtBQUNoQjtBQUNrQjtBQUc5RDs7Ozs7Q0FLQyxHQUNNLGVBQWVPLFdBQ3BCQyxNQUFjLEVBQ2RDLFFBQWlDO0lBRWpDLElBQUk7UUFDRixJQUFJLENBQUNELFFBQVEsTUFBTSxJQUFJRSxNQUFNO1FBRTdCLE1BQU1DLGVBQWtDO1lBQUUsR0FBR0YsUUFBUTtRQUFDO1FBRXRELG9DQUFvQztRQUNwQyxJQUFJRSxhQUFhQyxVQUFVLFlBQVlDLE1BQU07WUFDM0NGLGFBQWFDLFVBQVUsR0FBRyxNQUFNUCx5REFBV0EsQ0FBQ00sYUFBYUMsVUFBVTtRQUNyRTtRQUVBLDJDQUEyQztRQUMzQyxJQUFJRCxhQUFhRyxPQUFPLEVBQUU7WUFDeEJILGFBQWFHLE9BQU8sR0FBRyxNQUFNUiwyRUFBb0JBLENBQUNLLGFBQWFHLE9BQU87UUFDeEU7UUFDQSw0QkFBNEI7UUFDNUIsT0FBT0gsYUFBYUksU0FBUztRQUc3Qiw4QkFBOEI7UUFDOUIsTUFBTUMsYUFBYVosMERBQVVBLENBQUNhLE9BQU8sR0FBR0MsU0FBUyxDQUFDUDtRQUVsRCwwQkFBMEI7UUFDMUIsSUFBSSxDQUFDSyxXQUFXRyxPQUFPLEVBQUU7WUFDdkIsTUFBTSxJQUFJVCxNQUFNTSxXQUFXSSxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLENBQUNDLElBQU1BLEVBQUVDLE9BQU8sRUFBRUMsSUFBSSxDQUFDO1FBQ3JFO1FBRUEsbUJBQW1CO1FBQ25CLE1BQU1DLE1BQU0xQix1REFBR0EsQ0FBQ0csK0NBQUVBLEVBQUUsU0FBU0s7UUFDN0IsTUFBTVAsNkRBQVNBLENBQUN5QixLQUFLO1lBQ25CLEdBQUdWLFdBQVdXLElBQUk7WUFDbEJDLFdBQVcxQixtRUFBZUE7UUFDNUI7UUFFQSxPQUFPO1lBQUVpQixTQUFTO1FBQUs7SUFDekIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RTLFFBQVFULEtBQUssQ0FBQyx3QkFBd0JBO1FBQ3RDLE9BQU87WUFDTEQsU0FBUztZQUNUQyxPQUFPQSxpQkFBaUJWLFFBQVFVLE1BQU1JLE9BQU8sR0FBRztRQUNsRDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3VwZGF0ZVBvc3QudHM/NzFmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkb2MsIHVwZGF0ZURvYywgc2VydmVyVGltZXN0YW1wIH0gZnJvbSBcImZpcmViYXNlL2ZpcmVzdG9yZVwiO1xyXG5pbXBvcnQgeyBkYiB9IGZyb20gXCIuL2ZpcmViYXNlY29uZmlnXCI7XHJcbmltcG9ydCB7IFBvc3RTY2hlbWEsIFBvc3RUeXBlIH0gZnJvbSBcIi4uL3NjaGVtYS9wb3N0U2NoZW1hXCI7XHJcbmltcG9ydCB7IHVwbG9hZEltYWdlIH0gZnJvbSBcIi4vdXBsb2FkSW1hZ2VcIjtcclxuaW1wb3J0IHsgdXBsb2FkRW1iZWRkZWRJbWFnZXMgfSBmcm9tIFwiLi91cGxvYWRFbWJlZGRlZEltYWdlc1wiO1xyXG5pbXBvcnQgdHlwZSB7IFBvc3RfaW5wdXRhYmxlIH0gZnJvbSBcIi4uL2FwcC9kYXNoYm9hcmQvcHVibGlzaC9wYWdlXCI7XHJcblxyXG4vKipcclxuICogVXBkYXRlIGFuIGV4aXN0aW5nIHBvc3QgaW4gRmlyZXN0b3JlLlxyXG4gKiAtIFVwbG9hZHMgbmV3IGNvdmVyIGltYWdlIG9yIGVtYmVkZGVkIGltYWdlcyAoaWYgcHJvdmlkZWQpLlxyXG4gKiAtIFZhbGlkYXRlcyBkYXRhIHdpdGggWm9kLlxyXG4gKiAtIEFkZHMgYHVwZGF0ZWRBdGAgdGltZXN0YW1wLlxyXG4gKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVBvc3QoXHJcbiAgcG9zdElkOiBzdHJpbmcsXHJcbiAgcG9zdERhdGE6IFBhcnRpYWw8UG9zdF9pbnB1dGFibGU+XHJcbikge1xyXG4gIHRyeSB7XHJcbiAgICBpZiAoIXBvc3RJZCkgdGhyb3cgbmV3IEVycm9yKFwicG9zdElkIGlzIHJlcXVpcmVkXCIpO1xyXG5cclxuICAgIGNvbnN0IGRhdGFUb1VwZGF0ZTogUGFydGlhbDxQb3N0VHlwZT4gPSB7IC4uLnBvc3REYXRhIH07XHJcblxyXG4gICAgLy8gVXBsb2FkIGNvdmVyIGltYWdlIGlmIGl0J3MgYSBGaWxlXHJcbiAgICBpZiAoZGF0YVRvVXBkYXRlLmNvdmVySW1hZ2UgaW5zdGFuY2VvZiBGaWxlKSB7XHJcbiAgICAgIGRhdGFUb1VwZGF0ZS5jb3ZlckltYWdlID0gYXdhaXQgdXBsb2FkSW1hZ2UoZGF0YVRvVXBkYXRlLmNvdmVySW1hZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFVwbG9hZCBlbWJlZGRlZCBpbWFnZXMgaWYgY29udGVudCBleGlzdHNcclxuICAgIGlmIChkYXRhVG9VcGRhdGUuY29udGVudCkge1xyXG4gICAgICBkYXRhVG9VcGRhdGUuY29udGVudCA9IGF3YWl0IHVwbG9hZEVtYmVkZGVkSW1hZ2VzKGRhdGFUb1VwZGF0ZS5jb250ZW50KTtcclxuICAgIH1cclxuICAgIC8vIGNvbnNvbGUubG9nKGRhdGFUb1VwZGF0ZSlcclxuICAgIGRlbGV0ZSBkYXRhVG9VcGRhdGUuY3JlYXRlZEF0O1xyXG5cclxuXHJcbiAgICAvLyBWYWxpZGF0ZSB3aXRoIFpvZCAocGFydGlhbClcclxuICAgIGNvbnN0IHZhbGlkYXRpb24gPSBQb3N0U2NoZW1hLnBhcnRpYWwoKS5zYWZlUGFyc2UoZGF0YVRvVXBkYXRlKTtcclxuXHJcbiAgICAvLyBjb25zb2xlLmxvZyh2YWxpZGF0aW9uKVxyXG4gICAgaWYgKCF2YWxpZGF0aW9uLnN1Y2Nlc3MpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKHZhbGlkYXRpb24uZXJyb3IuaXNzdWVzLm1hcCgoaSkgPT4gaS5tZXNzYWdlKS5qb2luKFwiLCBcIikpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFVwZGF0ZSBGaXJlc3RvcmVcclxuICAgIGNvbnN0IHJlZiA9IGRvYyhkYiwgXCJwb3N0c1wiLCBwb3N0SWQpO1xyXG4gICAgYXdhaXQgdXBkYXRlRG9jKHJlZiwge1xyXG4gICAgICAuLi52YWxpZGF0aW9uLmRhdGEsXHJcbiAgICAgIHVwZGF0ZWRBdDogc2VydmVyVGltZXN0YW1wKCksXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB1cGRhdGluZyBwb3N0OlwiLCBlcnJvcik7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogXCJVbmtub3duIGVycm9yXCIsXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG5cclxuIl0sIm5hbWVzIjpbImRvYyIsInVwZGF0ZURvYyIsInNlcnZlclRpbWVzdGFtcCIsImRiIiwiUG9zdFNjaGVtYSIsInVwbG9hZEltYWdlIiwidXBsb2FkRW1iZWRkZWRJbWFnZXMiLCJ1cGRhdGVQb3N0IiwicG9zdElkIiwicG9zdERhdGEiLCJFcnJvciIsImRhdGFUb1VwZGF0ZSIsImNvdmVySW1hZ2UiLCJGaWxlIiwiY29udGVudCIsImNyZWF0ZWRBdCIsInZhbGlkYXRpb24iLCJwYXJ0aWFsIiwic2FmZVBhcnNlIiwic3VjY2VzcyIsImVycm9yIiwiaXNzdWVzIiwibWFwIiwiaSIsIm1lc3NhZ2UiLCJqb2luIiwicmVmIiwiZGF0YSIsInVwZGF0ZWRBdCIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/updatePost.ts\n"));

/***/ })

});